tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.2.0/types.yaml

inputs:
  env_type:
    description: |
      The environment's type to create
    type: string
    constraints:
      - valid_values:
          - dev-small
          - dev-large
          - production

node_templates:
  network:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, network, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, network, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, network, inputs ] }

  database:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, db, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, db, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, db, inputs ] }
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

  kubernetes:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, k8s, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, k8s, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, k8s, inputs ] }
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

  s3:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, s3, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, s3, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, s3, inputs ] }
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

  queue:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, queue, blueprint] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, queue, deployment] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, queue, inputs] }
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

capabilities:
  k8s_endpoint:
    description: Kubernetes cluster's endpoint
    value: { get_attribute: [ kubernetes, capabilities, endpoint ] }
  db_host:
    description: Database's host
    value: { get_attribute: [ database, capabilities, host ] }
  db_master_username:
    description: Database's master username
    value: { get_attribute: [ database, capabilities, master_username ] }
  db_master_password:
    description: Database's master password
    value: { get_attribute: [ database, capabilities, master_password ] }
  bucket_url:
    description: URL of S3 bucket
    value: { get_attribute: [ s3, capabilities, bucket_url ] }

tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.2.0/types.yaml

inputs:
  resource_prefix:
    description: |
      Alphanumeric prefix for resource naming
    type: string
    default: ''
  aws_region_name:
    description: |
      AWS region to work in
    type: string
    default: us-west-1
    constraints:
      - valid_values:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - af-south-1
          - ap-east-1
          - ap-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-south-1
          - eu-north-1
          - me-south-1
          - sa-east-1
  azure_location_name:
    description: | 
      Azure location to work in
    type: string
    default: westus
    constraints:
      - valid_values:
        - eastasia
        - southeastasia
        - centralus
        - eastus
        - eastus2
        - westus
        - northcentralus
        - southcentralus
        - northeurope
        - westeurope
        - japanwest
        - japaneast
        - brazilsouth
        - australiaeast
        - australiasoutheast
        - southindia
        - centralindia
        - westindia
        - canadacentral
        - canadaeast
        - uksouth
        - ukwest
        - westcentralus
        - westus2
        - koreacentral
        - koreasouth
        - francecentral
        - francesouth
        - australiacentral
        - australiacentral2
        - southafricanorth
        - southafricawest
  cloud_type:
    description: |
      The cloud's type to be used
    type: string
    constraints:
      - valid_values:
          - aws
          - azure
  env_type:
    description: |
      The environment's type to create
    type: string
    constraints:
      - valid_values:
          - dev-small
          - dev-large
          - production

node_templates:
  network:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, network, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, network, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, network, inputs ] }

  database:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, db, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, db, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, db, inputs ] }
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

  kubernetes:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, k8s, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, k8s, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, k8s, inputs ] }
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

  s3:
    type: cloudify.nodes.ServiceComponent
    properties:
      resource_config:
        blueprint:
          id: { get_secret: [ eaas_params, { get_input: env_type }, s3, blueprint ] }
          external_resource: true
        deployment:
          id: { get_secret: [ eaas_params, { get_input: env_type }, s3, deployment ] }
          inputs: { get_secret: [ eaas_params, { get_input: env_type }, s3, inputs ] }
    relationships:
      - target: network
        type: cloudify.relationships.depends_on

capabilities:
  k8s_endpoint:
    description: Kubernetes cluster's endpoint
    value: { get_attribute: [ kubernetes, capabilities, endpoint ] }
  db_host:
    description: Database's host
    value: { get_attribute: [ database, capabilities, host ] }
  db_master_username:
    description: Database's master username
    value: { get_attribute: [ database, capabilities, master_username ] }
  db_master_password:
    description: Database's master password
    value: { get_attribute: [ database, capabilities, master_password ] }
  bucket_url:
    description: URL of S3 bucket
    value: { get_attribute: [ s3, capabilities, bucket_url ] }

tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - plugin:cloudify-terraform-plugin?version= >=0.15.0

inputs:
  name:
    type: string
  azure_location_name:
    type: string
  cidr_block:
    type: string
    default: 10.0.0.0/16
  subnet_1_cidr:
    type: string
    default: 10.0.0.0/23
  subnet_2_cidr:
    type: string
    default: 10.0.2.0/23
  rg_tags:
    type: list
    default:
      - Key: Name
        Value: { get_input: name }
  vn_tags:
    type: list
    default:
      - Key: Name
        Value: { concat: [ { get_input: name }, '-vnet' ] }
  subnet_1_tags:
    type: list
    default:
      - Key: Name
        Value: { concat: [ { get_input: name }, '-subnet-1' ] }
  subnet_2_tags:
    type: list
    default:
      - Key: Name
        Value: { concat: [ { get_input: name }, '-subnet-2' ] }

node_templates:
  terraform:
    type: cloudify.nodes.terraform
    properties:
      resource_config:
        installation_source: https://releases.hashicorp.com/terraform/0.14.3/terraform_0.14.3_linux_amd64.zip

  terraform_module:
    type: cloudify.nodes.terraform.Module
    # interfaces:
    #   cloudify.interfaces.lifecycle:
    #     precreate:
    #       implementation: scripts/convert_tags.py
    #       executor: central_deployment_agent
    #       inputs:
    #         rg_tags: { get_input: rg_tags }
    #         vn_tags: { get_input: vn_tags }
    #         subnet_1_tags: { get_input: subnet_1_tags }
    #         subnet_2_tags: { get_input: subnet_2_tags }
    properties:
      resource_config:
        environment_variables:
          ARM_SUBSCRIPTION_ID: { get_secret: azure_subscription_id }
          ARM_TENANT_ID: { get_secret: azure_tenant_id }
          ARM_CLIENT_ID: { get_secret: azure_client_id }
          ARM_CLIENT_SECRET: { get_secret: azure_client_secret }
        variables:
          azure_location_name: { get_input: azure_location_name }
          rg_name: { get_input: name }
          # rg_tags: { get_input: rg_tags }
          sg_name: { concat: [ { get_input: name } , '-cfy-agents' ] }
          vnet_name: { concat: [ { get_input: name }, '-vnet' ] }
          # vnet_tags: { get_input: vn_tags }
          cidr_block: { get_input: cidr_block }
          subnet_1_name: { concat: [ { get_input: name }, '-subnet-1' ] }
          subnet_1_cidr: { get_input: subnet_1_cidr }
          # subnet_1_tags: { get_input: subnet_1_tags }
          subnet_2_name: { concat: [ { get_input: name }, '-subnet-2' ] }
          subnet_2_cidr: { get_input: subnet_2_cidr }
          # subnet_2_tags: { get_input: subnet_2_tags }
          sa_name: { concat: [ { get_input: name }, 'sa' ] }
        source:
          location: https://github.com/jakubcierlik/eaas-terraform/archive/main.zip
    relationships:
      - target: terraform
        type: cloudify.terraform.relationships.run_on_host

capabilities:
  rg_id:
    description: |
      Azure ID of the Resource Group
    value: { get_attribute: [ terraform_module, resources, rg, instances, 0, attributes, id ] }
  vn_id:
    description: |
      Azure ID of the Virtual Network
    value: { get_attribute: [ terraform_module, resources, vnet, instances, 0, attributes, id ] }
  subnet_ids:
    description: |
      Azure ID's of subnets
    value: 
      - { get_attribute: [ terraform_module, resources, subnet_1, instances, 0, attributes, id ] }
      - { get_attribute: [ terraform_module, resources, subnet_2, instances, 0, attributes, id ] }
  agents_security_group_id:
    description: |
      Azure ID of a security group that allows Cloudify Manager to access
      VM's via SSH
    value: { get_attribute: [ terraform_module, resources, sg, instances, 0, attributes, id ] }
  sa_id:
    description: |
      Azure ID of the Storage Account
    value: { get_attribute: [ terraform_module, resources, sa, instances, 0, attributes, id ] }

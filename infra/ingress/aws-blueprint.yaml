tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.0.0/types.yaml
  - plugin:cloudify-aws-plugin?version= >=2.5.6
  - plugin:cloudify-kubernetes-plugin?version===2.12.2

dsl_definitions:
  aws_client: &aws_client
    aws_access_key_id: { get_secret: aws_access_key_id }
    aws_secret_access_key: { get_secret: aws_secret_access_key }
    region_name: { get_input: aws_region_name }

inputs:
  aws_region_name:
    type: string
  eks_cluster_name:
    type: string

labels:
  csys-obj-type:
    values:
      - environment

node_templates:

  eks_cluster:
    type: cloudify.nodes.aws.eks.Cluster
    properties:
      client_config: *aws_client
      use_external_resource: true
      resource_id: { get_input: eks_cluster_name }
      resource_config:
        kwargs:
          name: { get_input: eks_cluster_name }

  master:
    type: cloudify.kubernetes.nodes.Master
    properties:
      configuration: &kubernetes_master_configuration
        file_content: { get_attribute: [ eks_cluster, kubeconf ] }
    relationships:
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster

  ns_and_sa:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/ns-and-sa.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster

  default_server_secret:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/default-server-secret.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster
      - type: cloudify.relationships.depends_on
        target: ns_and_sa

  nginx_config:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/nginx-config.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster
      - type: cloudify.relationships.depends_on
        target: ns_and_sa

  rbac:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/rbac.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster
      - type: cloudify.relationships.depends_on
        target: ns_and_sa

  ingress_class:
    type: cloudify.kubernetes.resources.CustomBlueprintDefinedResource
    properties:
      definition:
        apiVersion: networking.k8s.io/v1beta1
        kind: IngressClass
        metadata:
          name: nginx
          # annotations:
          #   ingressclass.kubernetes.io/is-default-class: "true"
        spec:
          controller: nginx.org/ingress-controller
      api_mapping:
        create:
          api: NetworkingV1beta1Api
          method: create_ingress_class
          payload: V1beta1IngressClass
        read:
          api: NetworkingV1beta1Api
          method: read_ingress_class
        update:
          api: NetworkingV1beta1Api
          method: patch_ingress_class
          payload: V1beta1IngressClass
        delete:
          api: NetworkingV1beta1Api
          method: delete_ingress_class
          payload: V1DeleteOptions
    interfaces:
      cloudify.interfaces.lifecycle:
        poststart: {}
        pull: {}
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster
      - type: cloudify.relationships.depends_on
        target: rbac    

  ingress_controller:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/nginx-ingress.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster
      - type: cloudify.relationships.depends_on
        target: ingress_class

  loadbalancer:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      file:
        resource_path: resources/loadbalancer.yaml
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: master
      - type: cloudify.relationships.aws.eks.connected_to_eks_cluster
        target: eks_cluster
      - type: cloudify.relationships.depends_on
        target: ingress_controller
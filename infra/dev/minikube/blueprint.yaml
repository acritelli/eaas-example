tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.1.1/types.yaml
  - plugin:cloudify-fabric-plugin?version= >=2.0.7

inputs:
  ip:
    type: string

node_templates:
  docker:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/install-docker.sh
            fabric_env: &fabric_env
              host: { get_input: ip }
              user: centos
              connect_kwargs:
                pkey: { get_secret: private_key_content }
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/configure-docker.sh
            fabric_env: *fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/start-docker.sh
            fabric_env: *fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/stop-docker.sh
            fabric_env: *fabric_env

  minikube:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/install-minikube.sh
            fabric_env: *fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/start-minikube.sh
            fabric_env: *fabric_env
        stop:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path: scripts/stop-minikube.sh
            fabric_env: *fabric_env
    relationships:
      - target: docker
        type: cloudify.relationships.depends_on

capabilities:
  endpoint:
    value: { concat: [ 'https://', { get_input: ip } ] }

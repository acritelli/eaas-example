tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://cloudify.co/spec/cloudify/5.1.0/types.yaml
  - plugin:cloudify-fabric-plugin

inputs:
  network_deployment_id:
    type: string
  bucket_name:
    type: string
  bucket_region:
    type: string

node_types:
  types.minio.Server:
    derived_from: cloudify.nodes.Root
    properties:
      access_key_id:
        type: string
        default: { get_secret: aws_access_key_id }
      secret_access_key:
        type: string
        default: { get_secret: aws_secret_access_key }
      data_dir:
        type: string
        default: /var/minio/data
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/install-minio-server.sh
            fabric_env:
              default: &fabric_env
                host_string: { get_capability: [ { get_input: network_deployment_id }, s3_vm_ip ] }
                user: centos
                key: { get_secret: private_key_content }
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/configure-minio-server.sh
            fabric_env:
              default: *fabric_env
        start:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/start-minio-server.sh
            fabric_env:
              default: *fabric_env

  types.minio.Client:
    derived_from: cloudify.nodes.Root
    properties:
      access_key_id:
        type: string
        default: { get_secret: aws_access_key_id }
      secret_access_key:
        type: string
        default: { get_secret: aws_secret_access_key }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/install-minio-client.sh
            fabric_env:
              default: *fabric_env
        configure:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/configure-minio-client.sh
            fabric_env:
              default: *fabric_env

  types.minio.Bucket:
    derived_from: cloudify.nodes.Root
    properties:
      bucket_name:
        type: string
      bucket_region:
        type: string
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: fabric.fabric_plugin.tasks.run_script
          inputs:
            script_path:
              default: scripts/create-bucket.sh
            fabric_env:
              default: *fabric_env

node_templates:
  minio-server:
    type: types.minio.Server
  minio-client:
    type: types.minio.Client
    relationships:
      - target: minio-server
        type: cloudify.relationships.depends_on
  minio-bucket:
    type: types.minio.Bucket
    properties:
      bucket_name: { get_input: bucket_name }
      bucket_region: { get_input: bucket_region }
    relationships:
      - target: minio-server
        type: cloudify.relationships.contained_in
      - target: minio-client
        type: cloudify.relationships.depends_on

capabilities:
  bucket_url:
    value: { concat: [ 'http://', { get_capability: [ { get_input: network_deployment_id }, s3_vm_ip ] }, ':9000/', { get_input: bucket_name } ] }

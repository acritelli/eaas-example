tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/5.2.0/types.yaml
  - plugin:cloudify-azure-plugin?version= >=3.0.9

dsl_definitions:
  client_config: &azure_config
    subscription_id: { get_secret: azure_subscription_id }
    tenant_id: { get_secret: azure_tenant_id }
    client_id: { get_secret: azure_client_id }
    client_secret: { get_secret: azure_client_secret }

inputs:
  resource_prefix:
    type: string
  azure_location_name:
    type: string
  image:
    type: dict
  vm_size:
    type: string

node_templates:
  rg_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint:
          id: rg
          external_resource: true
        deployment:
          auto_inc_suffix: true
          id: rg
          inputs:
            name: { concat: [ { get_input: resource_prefix }, 'rg' ] }
            azure_location_name: { get_input: azure_location_name }

  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      use_external_resource: true
      client_config: *azure_config
      location: { get_input: azure_location_name }
      name: { get_attribute: [ rg_deployment, capabilities, rg_id ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: rg_deployment

  # network:
  #   type: cloudify.azure.nodes.network.VirtualNetwork
  #   properties:
  #     use_external_resource: true
  #     client_config: *azure_config
  #     location: { get_input: azure_location_name }
  #     name: { get_attribute: [ rg_deployment, capabilities, vn_id ] }
  #   relationships:
  #     - type: cloudify.azure.relationships.contained_in_resource_group
  #       target: resource_group

  # main_route_table:
  #   type: cloudify.azure.nodes.network.RouteTable
  #   properties:
  #     use_external_resource: true
  #     client_config: *azure_config
  #     location: { get_input: azure_location_name }
  #     name: { get_attribute: [network, main_route_table_id] }
  #   relationships:
  #     - type: cloudify.relationships.contained_in
  #       target: network

  # route_internet_gateway:
  #   type: cloudify.azure.nodes.network.Route
  #   properties:
  #     client_config: *azure_config
  #     location: { get_input: azure_location_name }
  #     resource_config:
  #       addressPrefix: 0.0.0.0/0
  #       nextHopType: "???"

  k8s_vm_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint: &vm_blueprint_config
          id: azure_vm
          external_resource: true
        deployment:
          auto_inc_suffix: true
          id: vm-k8s
          inputs: &vm_deployment_inputs
            rg_deployment_id: { get_attribute: [ rg_deployment, deployment, id ] }
            resource_prefix: { concat: [ { get_input: resource_prefix }, '-k8s' ] }
            azure_location_name: { get_input: azure_location_name }
            image: { get_input: image }
            vm_size: { get_input: vm_size }
    relationships:
      - target: rg_deployment
        type: cloudify.relationships.depends_on

  db_vm_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint: *vm_blueprint_config
        deployment:
          auto_inc_suffix: true
          id: vm-db
          inputs: 
            <<: *vm_deployment_inputs
            resource_prefix: { concat: [ { get_input: resource_prefix }, '-db' ] }
    relationships:
      - target: rg_deployment
        type: cloudify.relationships.depends_on

  s3_vm_deployment:
    type: cloudify.nodes.Component
    properties:
      resource_config:
        blueprint: *vm_blueprint_config
        deployment:
          auto_inc_suffix: true
          id: vm-s3
          inputs:
            <<: *vm_deployment_inputs
            resource_prefix: { concat: [ { get_input: resource_prefix }, '-s3' ] }
    relationships:
      - target: rg_deployment
        type: cloudify.relationships.depends_on

capabilities:
  k8s_vm_ip:
    value: { get_attribute: [ k8s_vm_deployment, capabilities, vm_ip ] }
  db_vm_ip:
    value: { get_attribute: [ db_vm_deployment, capabilities, vm_ip ] }
  s3_vm_ip:
    value: { get_attribute: [ s3_vm_deployment, capabilities, vm_ip ] }
